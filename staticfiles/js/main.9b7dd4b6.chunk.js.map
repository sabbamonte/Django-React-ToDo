{"version":3,"sources":["components/AddTaskComponent.js","components/DeleteTaskComponent.js","components/EditTaskComponent.js","components/CompleteComponent.js","components/MainComponent.js","App.js","reportWebVitals.js","index.js"],"names":["AddTask","props","handleBlur","field","evt","setState","touched","state","title","body","timestamp","Date","completed","handleSubmit","bind","handleInputChange","event","target","value","type","checked","name","this","axios","post","task","then","response","console","log","error","errors","length","validate","Form","onSubmit","FormGroup","row","Label","htmlFor","md","Col","Input","id","onBlur","onChange","invalid","FormFeedback","size","Button","color","Component","DeleteTask","delete","toDelete","className","style","margin","EditTask","editTask","isModalOpen","toggleModal","put","onClick","Modal","isOpen","toggle","closeTimeoutMS","ModalHeader","ModalBody","check","Complete","window","location","reload","marginLeft","Main","createTaskList","get","res","Tasks","data","catch","isToggle","handleClick","buttonOne","buttonTwo","buttonThree","map","input","substring","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9b7dd4b6.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport {Button, Form, FormGroup, Label, Input, Col, FormFeedback} from 'reactstrap';\n\nclass AddTask extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            title: '',\n            body: '',\n            timestamp: new Date(),\n            completed: false,\n            touched: {\n                title: false,\n            }\n \n        };\n\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.handleInputChange = this.handleInputChange.bind(this);\n    }\n\n    handleInputChange(event) {\n        const target = event.target;\n        const value = target.type === 'checkbox' ? target.checked : target.value;\n        const name = target.name;\n        \n        this.setState({\n          [name]: value\n        });\n  \n    }\n\n    handleSubmit() {\n       \n        axios.post('/api/tasks/', {\n            task: this.state.title,\n            body: this.state.body,\n            timestamp: this.state.timestamp,\n            completed: this.state.completed\n\n        })\n        .then((response) => {\n            console.log(response);\n          }, (error) => {\n            console.log(error);\n       \n        })\n    }\n\n    handleBlur = (field) => (evt) => {\n        this.setState({\n            touched: { ...this.state.touched, [field]: true } //Spread Operator\n        });\n    } \n\n    validate(title) { // Inputs as parameters\n        const errors = { // Create object called errors, recreate a this.state\n            title: ''\n        };\n     // Error check all of them\n        if (this.state.touched.title && title.length < 3)\n            errors.title = 'Title should be >= 3 characters';\n  \n        return errors; // Return the errors\n    }\n \n    render() {\n        const errors = this.validate(this.state.title);\n        return(\n            <Form onSubmit={this.handleSubmit}>\n                <FormGroup row>\n                    <Label htmlFor=\"title\" md={3}>Title</Label>\n                    <Col md={10}>\n                        <Input type=\"text\" id=\"title\" name=\"title\"\n                        value={this.state.title}\n                        onBlur={this.handleBlur('title')}\n                        onChange={this.handleInputChange}\n                        invalid={errors.title !== ''}/> \n                        <FormFeedback>{errors.title}</FormFeedback>\n                    </Col>\n                </FormGroup>\n                <FormGroup row>\n                    <Label htmlFor=\"body\" md={3}>Description</Label>\n                    <Col md={10}>\n                        <Input type=\"textarea\" id=\"body\" name=\"body\"\n                        value={this.state.body}\n                        onChange={this.handleInputChange} /> \n                    </Col>\n                </FormGroup>\n                <FormGroup row>\n                    <Col md={{size: 10}}>\n                        <Button type=\"submit\" color=\"dark\">\n                            Add Task\n                        </Button>\n                    </Col>\n                </FormGroup>\n            </Form>\n        )\n    }   \n}\n\nexport default AddTask;","import React, { Component }  from \"react\";\nimport axios from \"axios\";\nimport {Form, Button} from 'reactstrap';\n\nclass DeleteTask extends Component {\n    constructor(props){\n        super(props);\n\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    handleSubmit() {\n        \n        axios.delete(`/api/tasks/${this.props.toDelete}`)\n    \n        .then((response) => {\n            console.log(response);\n        }, (error) => {\n            console.log(error);\n    \n        })\n    }\n\n    render() {\n        return(\n            <Form onSubmit={this.handleSubmit}>\n                <Button className=\"btn btn-dark btn-sm\" style={{margin:  '1px'}}>\n                    Delete Task\n                </Button>\n            </Form>    \n        )\n    }\n\n}\n\nexport default DeleteTask;","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport {Modal, ModalHeader, ModalBody} from 'reactstrap';\nimport {Button, Form, FormGroup, Label, Input, Col} from 'reactstrap';\n\nclass EditTask extends Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            title: this.props.editTask.task,\n            body: this.props.editTask.body,\n            completed: this.props.editTask.completed,\n            isModalOpen: false\n        }\n\n        this.toggleModal = this.toggleModal.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.handleInputChange = this.handleInputChange.bind(this);\n    }\n\n    toggleModal() {\n        this.setState({\n          isModalOpen: !this.state.isModalOpen\n        });\n    }\n\n    handleInputChange(event) {\n        const target = event.target;\n        const value = target.type === 'checkbox' ? target.checked : target.value;\n        const name = target.name;\n        \n        this.setState({\n            [name]: value\n        });\n\n\n    }\n\n    handleSubmit() {\n\n        axios.put(`/api/tasks/${this.props.editTask.id}/`, {\n            \n            task: this.state.title,\n            body: this.state.body,\n            completed: this.state.completed\n\n        })\n\n        .then((response) => {\n            console.log(response);\n            }, (error) => {\n            console.log(error);\n        \n        })\n        \n    }\n\n    render() {\n        return(\n            <div>\n                <button className=\"btn btn-dark btn-sm\" onClick={this.toggleModal} style={{margin:  '1px'}}>\n                    Edit Task\n                </button>\n                <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal} closeTimeoutMS={500}>\n                    <ModalHeader toggle={this.toggleModal}>Edit Task</ModalHeader>\n                    <ModalBody>\n                        <Form onSubmit={this.handleSubmit}>\n                            <FormGroup row>\n                                <Label htmlFor=\"title\" md={3}>Title</Label>\n                                <Col md={10}>\n                                    <Input type=\"text\" id=\"title\" name=\"title\"\n                                    value={this.state.title}\n                                    onChange={this.handleInputChange}/> \n                                </Col>\n                            </FormGroup>\n                            <FormGroup row>\n                                <Label htmlFor=\"body\" md={3}>Description</Label>\n                                <Col md={10}>\n                                    <Input type=\"text\" id=\"body\" name=\"body\"\n                                    value={this.state.body}\n                                    onChange={this.handleInputChange}/> \n                                </Col>\n                            </FormGroup>\n                            <FormGroup row>\n                                <Col md={1}>\n                                <FormGroup check>\n                                    <Label check>\n                                        <Input type=\"checkbox\"\n                                            name=\"completed\"\n                                            checked={this.state.completed}\n                                            onChange={this.handleInputChange} /> \n                                            <p>Completed</p>\n                                    </Label>\n                                </FormGroup>\n                                </Col>\n                            </FormGroup>\n                            <FormGroup row>\n                                <Col md={{size: 10}}>\n                                    <Button type=\"submit\" color=\"dark\">\n                                        Submit Changes\n                                    </Button>\n                                </Col>\n                            </FormGroup>\n                        </Form>\n                    </ModalBody>\n                </Modal>\n            </div>\n        )\n    }\n}\n\nexport default EditTask;","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport {Form, FormGroup, Label, Input, Col} from 'reactstrap';\n\nclass Complete extends Component {\n    constructor(props){\n        super(props);\n\n        this.state = {\n            completed: this.props.task.completed\n        }\n\n        this.handleSubmit =  this.handleSubmit.bind(this);\n    }\n\n    handleSubmit() {\n\n        this.setState({\n            completed: !this.state.completed\n        });\n\n        axios.put(`/api/tasks/${this.props.task.id}/`, {\n            \n            task: this.props.task.task,\n            body: this.props.task.body,\n            completed: !this.state.completed\n        \n        })\n\n            .then((response) => {\n                console.log(response);\n            }, (error) => {\n                console.log(error);\n\n        })\n\n        window.location.reload(false);\n\n    }\n\n    render() {\n        return(\n            <div className=\"row\" style={{margin:  '10px', marginLeft: '1px'}}>\n\n           \n            <Form onSubmit={this.handleSubmit}>\n                <FormGroup row>\n                <Col>\n                    <FormGroup check>\n                    <Label check>\n                        <Input type=\"checkbox\"\n                            name=\"completed\"\n                            onChange={this.handleSubmit}/>\n                            <p>Completed</p>\n                    </Label>\n                    </FormGroup>\n                </Col>\n                </FormGroup>\n               \n            </Form>\n            </div>\n        )\n    }\n}\n\nexport default Complete","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport {Modal, ModalHeader, ModalBody} from 'reactstrap';\nimport AddTask from \"./AddTaskComponent\";\nimport DeleteTask from \"./DeleteTaskComponent\";\nimport EditTask from \"./EditTaskComponent\";\nimport Complete from \"./CompleteComponent\";\n\n\nclass Main extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            Tasks: [],\n            isModalOpen: false,\n            isToggle: false,\n            completed: false\n        };\n\n        this.toggleModal = this.toggleModal.bind(this);\n        this.handleClick = this.handleClick.bind(this);\n    }\n\n    createTaskList = () => {\n        axios\n            .get(\"/api/tasks/\")\n            .then((res) => {\n            \n                this.setState({\n                    Tasks: res.data\n                })\n            })\n\n            .catch((error) => {\n                console.log(error)\n            })\n    };\n\n    componentDidMount(){\n        this.createTaskList()\n    }\n\n    toggleModal() {\n        this.setState({\n          isModalOpen: !this.state.isModalOpen\n        });\n    }\n\n    handleClick() {\n        this.setState({\n            isToggle: !this.state.isToggle,\n        })\n    }\n\n    render() {\n        const buttonOne = <button onClick={this.handleClick} className=\"form-group btn btn-success\"> Completed </button>\n        const buttonTwo = <button onClick={this.handleClick} className=\"form-group btn btn-danger\"> Back to Open Tasks </button>\n        const buttonThree = <button onClick={this.toggleModal} className=\"form-group btn btn-dark\">Add Task</button>\n        \n        return (\n        <div className=\"container\">\n            <h1 className=\"text-white text-uppercase text-center my-4\">TASKS</h1>\n            <div className=\"row\">\n                <div className=\"col-md-6 col-sm-10 mx-auto p-0\">\n                    <div className=\"card p-3\">\n                        <div className=\"mb-4 btn-group\">\n                            {this.state.isToggle === false ? buttonThree: null}\n                            {this.state.isToggle === false ? buttonOne: buttonTwo}\n                        </div>\n                        <ul className=\"list-group list-group-flush border-top-0\">\n                            {this.state.Tasks.map((task) => \n                                this.state.isToggle === true && task.completed === true ?  \n                                    <div key={task.id} className=\"list-group-item\">\n                                        <h6>{task.task}</h6>\n                                        <p>{task.body}</p>\n                                        <p input type={Date}>{task.timestamp.substring(0,10)}</p>\n                                        <p>{task.completed}</p>\n                                        {task.id ? <div>\n                                            <DeleteTask toDelete={task.id}/> \n                                        </div>: null}\n                                    </div> \n                                : this.state.isToggle === false && task.completed === false ? \n                                    <div key={task.id} className=\"list-group-item\">\n                                        <h6>{task.task}</h6>\n                                        <p>{task.body}</p>\n                                        <p input type={Date}>{task.timestamp.substring(0,10)}</p>\n                                        <p>{task.completed}</p>\n                                        {task.id ? \n                                            <div className=\"btn-group\">\n                                                <EditTask editTask={task}/>\n                                                <DeleteTask toDelete={task.id}/> \n                                            </div>\n                                        : null}\n                                        <Complete task={task}/>\n                                    </div> \n                                : null\n                            )}\n                        </ul>\n                    </div>\n                </div>\n            </div>\n            <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal} closeTimeoutMS={500}>\n                <ModalHeader toggle={this.toggleModal}>Add New Task</ModalHeader>\n                <ModalBody>\n                       <AddTask/>\n                </ModalBody>\n            </Modal>\n        </div>\n        )\n    }\n}\n\nexport default Main;\n\n","import React, { Component } from 'react';\nimport Main from './components/MainComponent';\nimport './App.css';\n\n \nclass App extends Component {\n\n  render() {\n    return (\n      <div>\n        <Main/>\n      </div>\n    );\n  }\n\n}\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}