{"ast":null,"code":"var _jsxFileName = \"/Users/simone/django-todo-react/frontend/src/components/AddTaskComponent.js\";\nimport React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { Button, Form, FormGroup, Label, Input, Col, FormFeedback } from 'reactstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass AddTask extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      title: '',\n      body: '',\n      timestamp: new Date(),\n      completed: false,\n      touched: {\n        title: false\n      }\n    };\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleInputChange = this.handleInputChange.bind(this);\n  }\n\n  handleInputChange(event) {\n    const target = event.target;\n    const value = target.type === 'checkbox' ? target.checked : target.value;\n    const name = target.name;\n    this.setState({\n      [name]: value\n    });\n  }\n\n  handleSubmit() {\n    axios.post('/api/tasks/', {\n      task: this.state.title,\n      body: this.state.body,\n      timestamp: this.state.timestamp,\n      completed: this.state.completed\n    }).then(response => {\n      console.log(response);\n    }, error => {\n      console.log(error);\n    });\n  }\n\n  validate(title) {\n    // Inputs as parameters\n    const errors = {\n      // Create object called errors, recreate a this.state\n      title: ''\n    }; // Error check all of them\n\n    if (this.state.touched.title && title.length < 3) errors.title = 'Title should be >= 3 characters';\n    return errors; // Return the errors\n  }\n\n  render() {\n    const errors = this.validate(this.state.title);\n    return /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: this.handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(FormGroup, {\n        row: true,\n        children: [/*#__PURE__*/_jsxDEV(Label, {\n          htmlFor: \"title\",\n          md: 3,\n          children: \"Title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          md: 10,\n          children: /*#__PURE__*/_jsxDEV(Input, {\n            type: \"text\",\n            id: \"title\",\n            name: \"title\",\n            value: this.state.title,\n            onChange: this.handleInputChange,\n            valid: errors.lastname === '',\n            invalid: errors.title !== ''\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n        row: true,\n        children: [/*#__PURE__*/_jsxDEV(Label, {\n          htmlFor: \"body\",\n          md: 3,\n          children: \"Description\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          md: 10,\n          children: /*#__PURE__*/_jsxDEV(Input, {\n            type: \"textarea\",\n            id: \"body\",\n            name: \"body\",\n            value: this.state.body,\n            onChange: this.handleInputChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n        row: true,\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          md: {\n            size: 10\n          },\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            color: \"dark\",\n            children: \"Add Task\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default AddTask;","map":{"version":3,"sources":["/Users/simone/django-todo-react/frontend/src/components/AddTaskComponent.js"],"names":["React","Component","axios","Button","Form","FormGroup","Label","Input","Col","FormFeedback","AddTask","constructor","props","state","title","body","timestamp","Date","completed","touched","handleSubmit","bind","handleInputChange","event","target","value","type","checked","name","setState","post","task","then","response","console","log","error","validate","errors","length","render","lastname","size"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport {Button, Form, FormGroup, Label, Input, Col, FormFeedback} from 'reactstrap';\n\nclass AddTask extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            title: '',\n            body: '',\n            timestamp: new Date(),\n            completed: false,\n            touched: {\n                title: false,\n            }\n \n        };\n\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.handleInputChange = this.handleInputChange.bind(this);\n    }\n\n    handleInputChange(event) {\n        const target = event.target;\n        const value = target.type === 'checkbox' ? target.checked : target.value;\n        const name = target.name;\n   \n        this.setState({\n          [name]: value\n        });\n  \n    }\n\n    handleSubmit() {\n       \n        axios.post('/api/tasks/', {\n            task: this.state.title,\n            body: this.state.body,\n            timestamp: this.state.timestamp,\n            completed: this.state.completed\n\n        })\n        .then((response) => {\n            console.log(response);\n          }, (error) => {\n            console.log(error);\n       \n        })\n    }\n\n    validate(title) { // Inputs as parameters\n        const errors = { // Create object called errors, recreate a this.state\n            title: ''\n        };\n     // Error check all of them\n        if (this.state.touched.title && title.length < 3)\n            errors.title = 'Title should be >= 3 characters';\n  \n        return errors; // Return the errors\n    }\n \n    \n    render() {\n        const errors = this.validate(this.state.title);\n        return(\n            <Form onSubmit={this.handleSubmit}>\n                <FormGroup row>\n                    <Label htmlFor=\"title\" md={3}>Title</Label>\n                    <Col md={10}>\n                        <Input type=\"text\" id=\"title\" name=\"title\"\n                        value={this.state.title}\n                        onChange={this.handleInputChange} \n                        valid={errors.lastname === ''}\n                        invalid={errors.title !== ''}/> \n                    </Col>\n                </FormGroup>\n                <FormGroup row>\n                    <Label htmlFor=\"body\" md={3}>Description</Label>\n                    <Col md={10}>\n                        <Input type=\"textarea\" id=\"body\" name=\"body\"\n                        value={this.state.body}\n                        onChange={this.handleInputChange} /> \n                    </Col>\n                </FormGroup>\n                <FormGroup row>\n                    <Col md={{size: 10}}>\n                        <Button type=\"submit\" color=\"dark\">\n                            Add Task\n                        </Button>\n                    </Col>\n                </FormGroup>\n            </Form>\n        )\n    }   \n}\n\nexport default AddTask;"]},"metadata":{},"sourceType":"module"}