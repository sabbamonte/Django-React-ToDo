{"ast":null,"code":"var _jsxFileName = \"/Users/simone/django-todo-react/frontend/src/components/MainComponent.js\";\nimport React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { Modal, ModalHeader, ModalBody } from 'reactstrap';\nimport AddTask from \"./AddTaskComponent\";\nimport DeleteTask from \"./DeleteTaskComponent\";\nimport EditTask from \"./EditTaskComponent\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Main extends Component {\n  constructor(props) {\n    super(props);\n\n    this.createTaskList = () => {\n      axios.get(\"/api/tasks/\").then(res => {\n        this.setState({\n          Tasks: res.data\n        });\n      }).catch(error => {\n        console.log(error);\n      });\n    };\n\n    this.state = {\n      Tasks: [],\n      isModalOpen: false,\n      isToggle: false,\n      title: \"completed\"\n    };\n    this.toggleModal = this.toggleModal.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  componentDidMount() {\n    this.createTaskList();\n  }\n\n  toggleModal() {\n    this.setState({\n      isModalOpen: !this.state.isModalOpen\n    });\n  }\n\n  handleClick() {\n    this.setState({\n      isToggle: !this.state.isToggle,\n      title: \"Open Tasks\"\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-white text-uppercase text-center my-4\",\n        children: \"TASKS\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-6 col-sm-10 mx-auto p-0\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card p-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mb-4\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: this.toggleModal,\n                className: \"btn btn-dark\",\n                children: \"Add task\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 64,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: this.handleClick,\n                className: \"btn btn-dark\",\n                children: title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 67,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n              className: \"list-group list-group-flush border-top-0\",\n              children: this.state.Tasks.map(task => this.state.isToggle === true && task.completed === true ? /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"list-group-item\",\n                children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n                  children: task.task\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 75,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: task.body\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 76,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  input: true,\n                  type: Date,\n                  children: task.timestamp.substring(0, 10)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 77,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: task.completed\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 78,\n                  columnNumber: 41\n                }, this), task.id ? /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: /*#__PURE__*/_jsxDEV(DeleteTask, {\n                    toDelete: task.id\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 80,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 79,\n                  columnNumber: 52\n                }, this) : null]\n              }, task.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 74,\n                columnNumber: 37\n              }, this) : this.state.isToggle === false && task.completed === false ? /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"list-group-item\",\n                children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n                  children: task.task\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 85,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: task.body\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 86,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  input: true,\n                  type: Date,\n                  children: task.timestamp.substring(0, 10)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 87,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: task.completed\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 88,\n                  columnNumber: 41\n                }, this), task.id ? /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(DeleteTask, {\n                    toDelete: task.id\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 90,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(EditTask, {\n                    editTask: task\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 91,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 89,\n                  columnNumber: 52\n                }, this) : null]\n              }, task.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 84,\n                columnNumber: 37\n              }, this) : null)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Modal, {\n        isOpen: this.state.isModalOpen,\n        toggle: this.toggleModal,\n        closeTimeoutMS: 500,\n        children: [/*#__PURE__*/_jsxDEV(ModalHeader, {\n          toggle: this.toggleModal,\n          children: \"Add New Task\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(ModalBody, {\n          children: /*#__PURE__*/_jsxDEV(AddTask, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 24\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nexport default Main;","map":{"version":3,"sources":["/Users/simone/django-todo-react/frontend/src/components/MainComponent.js"],"names":["React","Component","axios","Modal","ModalHeader","ModalBody","AddTask","DeleteTask","EditTask","Main","constructor","props","createTaskList","get","then","res","setState","Tasks","data","catch","error","console","log","state","isModalOpen","isToggle","title","toggleModal","bind","handleClick","componentDidMount","render","map","task","completed","body","Date","timestamp","substring","id"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport {Modal, ModalHeader, ModalBody} from 'reactstrap';\nimport AddTask from \"./AddTaskComponent\";\nimport DeleteTask from \"./DeleteTaskComponent\";\nimport EditTask from \"./EditTaskComponent\";\n\n\nclass Main extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            Tasks: [],\n            isModalOpen: false,\n            isToggle: false,\n            title: \"completed\"\n        };\n\n        this.toggleModal = this.toggleModal.bind(this);\n        this.handleClick = this.handleClick.bind(this);\n    }\n\n    createTaskList = () => {\n        axios\n            .get(\"/api/tasks/\")\n            .then((res) => {\n            \n                this.setState({\n                    Tasks: res.data\n                })\n            })\n\n            .catch((error) => {\n                console.log(error)\n            })\n    };\n\n    componentDidMount(){\n        this.createTaskList()\n    }\n\n    toggleModal() {\n        this.setState({\n          isModalOpen: !this.state.isModalOpen\n        });\n    }\n\n    handleClick() {\n        this.setState({\n            isToggle: !this.state.isToggle,\n            title: \"Open Tasks\"\n        })\n    }\n\n    render() {\n        return (\n        <div className=\"container\">\n            <h1 className=\"text-white text-uppercase text-center my-4\">TASKS</h1>\n            <div className=\"row\">\n                <div className=\"col-md-6 col-sm-10 mx-auto p-0\">\n                    <div className=\"card p-3\">\n                        <div className=\"mb-4\">\n                            <button onClick={this.toggleModal} className=\"btn btn-dark\">\n                                Add task\n                            </button>\n                            <button onClick={this.handleClick} className=\"btn btn-dark\">\n                                {title}\n                            </button>\n                        </div>\n                        <ul className=\"list-group list-group-flush border-top-0\">\n                            {this.state.Tasks.map((task) => \n                                this.state.isToggle === true && task.completed === true ?  \n                                    <div key={task.id} className=\"list-group-item\">\n                                        <h6>{task.task}</h6>\n                                        <p>{task.body}</p>\n                                        <p input type={Date}>{task.timestamp.substring(0,10)}</p>\n                                        <p>{task.completed}</p>\n                                        {task.id ? <div>\n                                            <DeleteTask toDelete={task.id}/> \n                                        </div>: null}\n                                    </div> \n                                : this.state.isToggle === false && task.completed === false ? \n                                    <div key={task.id} className=\"list-group-item\">\n                                        <h6>{task.task}</h6>\n                                        <p>{task.body}</p>\n                                        <p input type={Date}>{task.timestamp.substring(0,10)}</p>\n                                        <p>{task.completed}</p>\n                                        {task.id ? <div>\n                                            <DeleteTask toDelete={task.id}/> \n                                            <EditTask editTask={task}/>\n                                        </div>: null}\n                                    </div> \n                                : null\n                            )}\n                        </ul>\n                    </div>\n                </div>\n            </div>\n            <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal} closeTimeoutMS={500}>\n                <ModalHeader toggle={this.toggleModal}>Add New Task</ModalHeader>\n                <ModalBody>\n                       <AddTask/>\n                </ModalBody>\n            </Modal>\n        </div>\n        )\n    }\n}\n\nexport default Main;\n\n"]},"metadata":{},"sourceType":"module"}