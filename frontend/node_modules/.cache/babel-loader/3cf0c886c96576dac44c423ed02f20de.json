{"ast":null,"code":"var _jsxFileName = \"/Users/simone/django-todo-react/frontend/src/components/MainComponent.js\";\nimport React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { Modal, ModalHeader, ModalBody } from 'reactstrap';\nimport AddTask from \"./AddTaskComponent\";\nimport DeleteTask from \"./DeleteTaskComponent\";\nimport EditTask from \"./EditTaskComponent\";\nimport Complete from \"./CompleteComponent\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Main extends Component {\n  constructor(props) {\n    super(props);\n\n    this.createTaskList = () => {\n      axios.get(\"/api/tasks/\").then(res => {\n        this.setState({\n          Tasks: res.data\n        });\n      }).catch(error => {\n        console.log(error);\n      });\n    };\n\n    this.state = {\n      Tasks: [],\n      task: [],\n      isModalOpen: false,\n      isToggle: false,\n      completed: false\n    };\n    this.toggleModal = this.toggleModal.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  componentDidMount() {\n    this.createTaskList();\n  }\n\n  toggleModal() {\n    this.setState({\n      isModalOpen: !this.state.isModalOpen\n    });\n  }\n\n  handleClick() {\n    this.setState({\n      isToggle: !this.state.isToggle\n    });\n  }\n\n  handleSubmit() {}\n\n  render() {\n    const buttonOne = /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: this.handleClick,\n      className: \"form-group btn btn-success\",\n      children: \" Completed \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 27\n    }, this);\n\n    const buttonTwo = /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: this.handleClick,\n      className: \"form-group btn btn-danger\",\n      children: \" Back to Open Tasks \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 27\n    }, this);\n\n    const buttonThree = /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: this.toggleModal,\n      className: \"form-group btn btn-dark\",\n      children: \"Add Task\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 29\n    }, this);\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-white text-uppercase text-center my-4\",\n        children: \"TASKS\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-6 col-sm-10 mx-auto p-0\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card p-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mb-4 btn-group\",\n              children: [this.state.isToggle === false ? buttonThree : null, this.state.isToggle === false ? buttonOne : buttonTwo]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n              className: \"list-group list-group-flush border-top-0\",\n              children: this.state.Tasks.map(task => this.state.isToggle === true && task.completed === true ? /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"list-group-item\",\n                children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n                  children: task.task\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 81,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: task.body\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 82,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  input: true,\n                  type: Date,\n                  children: task.timestamp.substring(0, 10)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 83,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: task.completed\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 84,\n                  columnNumber: 41\n                }, this), task.id ? /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: /*#__PURE__*/_jsxDEV(DeleteTask, {\n                    toDelete: task.id\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 86,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 85,\n                  columnNumber: 52\n                }, this) : null]\n              }, task.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 80,\n                columnNumber: 37\n              }, this) : this.state.isToggle === false && task.completed === false ? /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"list-group-item\",\n                children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n                  children: task.task\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 91,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: task.body\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 92,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  input: true,\n                  type: Date,\n                  children: task.timestamp.substring(0, 10)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 93,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: task.completed\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 94,\n                  columnNumber: 41\n                }, this), task.id ? /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"btn-group\",\n                  children: [/*#__PURE__*/_jsxDEV(EditTask, {\n                    editTask: task\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 97,\n                    columnNumber: 49\n                  }, this), /*#__PURE__*/_jsxDEV(DeleteTask, {\n                    toDelete: task.id\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 98,\n                    columnNumber: 49\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 96,\n                  columnNumber: 45\n                }, this) : null, /*#__PURE__*/_jsxDEV(Complete, {\n                  task: task\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 101,\n                  columnNumber: 41\n                }, this)]\n              }, task.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 90,\n                columnNumber: 37\n              }, this) : null)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Modal, {\n        isOpen: this.state.isModalOpen,\n        toggle: this.toggleModal,\n        closeTimeoutMS: 500,\n        children: [/*#__PURE__*/_jsxDEV(ModalHeader, {\n          toggle: this.toggleModal,\n          children: \"Add New Task\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(ModalBody, {\n          children: /*#__PURE__*/_jsxDEV(AddTask, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 24\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nexport default Main;","map":{"version":3,"sources":["/Users/simone/django-todo-react/frontend/src/components/MainComponent.js"],"names":["React","Component","axios","Modal","ModalHeader","ModalBody","AddTask","DeleteTask","EditTask","Complete","Main","constructor","props","createTaskList","get","then","res","setState","Tasks","data","catch","error","console","log","state","task","isModalOpen","isToggle","completed","toggleModal","bind","handleClick","componentDidMount","handleSubmit","render","buttonOne","buttonTwo","buttonThree","map","body","Date","timestamp","substring","id"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport {Modal, ModalHeader, ModalBody} from 'reactstrap';\nimport AddTask from \"./AddTaskComponent\";\nimport DeleteTask from \"./DeleteTaskComponent\";\nimport EditTask from \"./EditTaskComponent\";\nimport Complete from \"./CompleteComponent\";\n\n\nclass Main extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            Tasks: [],\n            task: [],\n            isModalOpen: false,\n            isToggle: false,\n            completed: false\n        };\n\n        this.toggleModal = this.toggleModal.bind(this);\n        this.handleClick = this.handleClick.bind(this);\n    }\n\n    createTaskList = () => {\n        axios\n            .get(\"/api/tasks/\")\n            .then((res) => {\n            \n                this.setState({\n                    Tasks: res.data\n                })\n            })\n\n            .catch((error) => {\n                console.log(error)\n            })\n    };\n\n    componentDidMount(){\n        this.createTaskList()\n    }\n\n    toggleModal() {\n        this.setState({\n          isModalOpen: !this.state.isModalOpen\n        });\n    }\n\n    handleClick() {\n        this.setState({\n            isToggle: !this.state.isToggle,\n        })\n    }\n\n    handleSubmit() {\n\n        \n    }\n\n    render() {\n        const buttonOne = <button onClick={this.handleClick} className=\"form-group btn btn-success\"> Completed </button>\n        const buttonTwo = <button onClick={this.handleClick} className=\"form-group btn btn-danger\"> Back to Open Tasks </button>\n        const buttonThree = <button onClick={this.toggleModal} className=\"form-group btn btn-dark\">Add Task</button>\n        \n        return (\n        <div className=\"container\">\n            <h1 className=\"text-white text-uppercase text-center my-4\">TASKS</h1>\n            <div className=\"row\">\n                <div className=\"col-md-6 col-sm-10 mx-auto p-0\">\n                    <div className=\"card p-3\">\n                        <div className=\"mb-4 btn-group\">\n                            {this.state.isToggle === false ? buttonThree: null}\n                            {this.state.isToggle === false ? buttonOne: buttonTwo}\n                        </div>\n                        <ul className=\"list-group list-group-flush border-top-0\">\n                            {this.state.Tasks.map((task) => \n                                this.state.isToggle === true && task.completed === true ?  \n                                    <div key={task.id} className=\"list-group-item\">\n                                        <h6>{task.task}</h6>\n                                        <p>{task.body}</p>\n                                        <p input type={Date}>{task.timestamp.substring(0,10)}</p>\n                                        <p>{task.completed}</p>\n                                        {task.id ? <div>\n                                            <DeleteTask toDelete={task.id}/> \n                                        </div>: null}\n                                    </div> \n                                : this.state.isToggle === false && task.completed === false ? \n                                    <div key={task.id} className=\"list-group-item\">\n                                        <h6>{task.task}</h6>\n                                        <p>{task.body}</p>\n                                        <p input type={Date}>{task.timestamp.substring(0,10)}</p>\n                                        <p>{task.completed}</p>\n                                        {task.id ? \n                                            <div className=\"btn-group\">\n                                                <EditTask editTask={task}/>\n                                                <DeleteTask toDelete={task.id}/> \n                                            </div>\n                                        : null}\n                                        <Complete task={task}/>\n                                    </div> \n                                : null\n                            )}\n                        </ul>\n                    </div>\n                </div>\n            </div>\n            <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal} closeTimeoutMS={500}>\n                <ModalHeader toggle={this.toggleModal}>Add New Task</ModalHeader>\n                <ModalBody>\n                       <AddTask/>\n                </ModalBody>\n            </Modal>\n        </div>\n        )\n    }\n}\n\nexport default Main;\n\n"]},"metadata":{},"sourceType":"module"}