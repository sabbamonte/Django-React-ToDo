{"ast":null,"code":"var _jsxFileName = \"/Users/simone/django-todo-react/frontend/src/components/MainComponent.js\";\nimport React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { Modal, ModalHeader, ModalBody } from 'reactstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Main extends Component {\n  constructor(props) {\n    super(props);\n\n    this.createTaskList = () => {\n      axios.get(\"/api/tasks/\").then(res => {\n        const data = res.data;\n        const tasks = data;\n        this.setState({\n          Tasks: tasks\n        });\n      }).catch(error => {\n        console.log(error);\n      });\n    };\n\n    this.state = {\n      Tasks: [],\n      isModalOpen: false\n    };\n    this.toggleModal = this.toggleModal.bind(this);\n  }\n\n  componentDidMount() {\n    this.createTaskList();\n  }\n\n  toggleModal() {\n    this.setState({\n      isModalOpen: !this.state.isModalOpen\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-white text-uppercase text-center my-4\",\n        children: \"TASKS\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-6 col-sm-10 mx-auto p-0\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card p-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mb-4\",\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: this.toggleModal,\n                className: \"btn btn-dark\",\n                children: \"Add task\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 54,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n              className: \"list-group list-group-flush border-top-0\",\n              children: this.state.Tasks.map(task => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"list-group-item\",\n                children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n                  children: task.task\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 61,\n                  columnNumber: 29\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: task.body\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 62,\n                  columnNumber: 29\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  input: true,\n                  type: Date,\n                  children: task.timestamp.substring(0, 10)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 63,\n                  columnNumber: 29\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: task.completed\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 64,\n                  columnNumber: 29\n                }, this)]\n              }, task.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 60,\n                columnNumber: 29\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Modal, {\n        isOpen: this.state.isModalOpen,\n        toggle: this.toggleModal,\n        children: [/*#__PURE__*/_jsxDEV(ModalHeader, {\n          toggle: this.toggleModal,\n          children: \"Add New Task\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(ModalBody, {\n          children: /*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"Hello\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nexport default Main;","map":{"version":3,"sources":["/Users/simone/django-todo-react/frontend/src/components/MainComponent.js"],"names":["React","Component","axios","Modal","ModalHeader","ModalBody","Main","constructor","props","createTaskList","get","then","res","data","tasks","setState","Tasks","catch","error","console","log","state","isModalOpen","toggleModal","bind","componentDidMount","render","map","task","body","Date","timestamp","substring","completed","id"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport {Modal, ModalHeader, ModalBody} from 'reactstrap';\n\n\nclass Main extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            Tasks: [],\n            isModalOpen: false\n        };\n\n        this.toggleModal = this.toggleModal.bind(this);\n    }\n\n    createTaskList = () => {\n        axios\n            .get(\"/api/tasks/\")\n            .then((res) => {\n                const data = res.data\n                const tasks = data\n\n\n                this.setState({\n                    Tasks: tasks\n                })\n            })\n\n            .catch((error) => {\n                console.log(error)\n            })\n    };\n\n    componentDidMount(){\n        this.createTaskList()\n    }\n\n    toggleModal() {\n        this.setState({\n          isModalOpen: !this.state.isModalOpen\n        });\n    }\n\n    render() {\n        return (\n        <div className=\"container\">\n            <h1 className=\"text-white text-uppercase text-center my-4\">TASKS</h1>\n            <div className=\"row\">\n                <div className=\"col-md-6 col-sm-10 mx-auto p-0\">\n                    <div className=\"card p-3\">\n                        <div className=\"mb-4\">\n                            <button onClick={this.toggleModal} className=\"btn btn-dark\">\n                                Add task\n                            </button>\n                        </div>\n                        <ul className=\"list-group list-group-flush border-top-0\">\n                            {this.state.Tasks.map((task) => \n                            <div key={task.id} className=\"list-group-item\">\n                            <h6>{task.task}</h6>\n                            <p>{task.body}</p>\n                            <p input type={Date}>{task.timestamp.substring(0,10)}</p>\n                            <p>{task.completed}</p>\n                            </div>)}\n                        </ul>\n                    </div>\n                </div>\n            </div>\n            <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\n                <ModalHeader toggle={this.toggleModal}>Add New Task</ModalHeader>\n                <ModalBody>\n                        <h1>Hello</h1>\n                </ModalBody>\n            </Modal>\n        </div>\n      \n        )\n    }\n}\n\nexport default Main;\n\n"]},"metadata":{},"sourceType":"module"}